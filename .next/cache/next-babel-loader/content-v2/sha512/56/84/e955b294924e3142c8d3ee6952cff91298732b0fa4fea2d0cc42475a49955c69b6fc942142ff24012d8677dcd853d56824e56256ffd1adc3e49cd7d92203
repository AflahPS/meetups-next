{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aflah/Documents/React Trials/06-onwards-to-a-bigger-project-starting-project/pages/index.js\";\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction Home(props) {\n  dotenv.config();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupList, {\n      meetups: props.meetups\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n} // export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // Fetch data from the server or API\n//   return {\n//     props: {\n//       meetups: DUMMY_LIST,\n//     }\n// }\n\n\n_c = Home;\nexport var __N_SSG = true;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"sources":["/home/aflah/Documents/React Trials/06-onwards-to-a-bigger-project-starting-project/pages/index.js"],"names":["MeetupList","Home","props","dotenv","config","meetups"],"mappings":";;;AAEA,OAAOA,UAAP,MAAuB,kCAAvB;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AACnBC,EAAAA,MAAM,CAACC,MAAP;AACA,sBACE;AAAA,2BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEF,KAAK,CAACG;AAA3B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAKD,C,CAED;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;;KAlBSJ,I;;AAkDT,eAAeA,IAAf","sourcesContent":["import { MongoClient } from \"mongodb\";\n\nimport MeetupList from \"../components/meetups/MeetupList\";\n\nfunction Home(props) {\n  dotenv.config();\n  return (\n    <>\n      <MeetupList meetups={props.meetups} />\n    </>\n  );\n}\n\n// export async function getServerSideProps(context) {\n//   const req = context.req;\n//   const res = context.res;\n//   // Fetch data from the server or API\n\n//   return {\n//     props: {\n//       meetups: DUMMY_LIST,\n//     }\n// }\n\nexport async function getStaticProps() {\n  // Fetch data from the server or API\n  try {\n    const client = await MongoClient.connect(\n      `mongodb+srv://greeny:${process.env.DB_PASSWORD}@greeny.z2jivg0.mongodb.net/meetup?retryWrites=true&w=majority`\n    );\n    const db = client.db();\n    const meetupColl = db.collection(\"meetups\");\n    const result = await meetupColl.find().toArray();\n    console.log(result);\n    client.close();\n    return {\n      props: {\n        meetups: result.map((meet) => {\n          return {\n            id: meet._id.toString(),\n            title: meet.title,\n            image: meet.image,\n            description: meet.description,\n            address: meet.address,\n          };\n        }),\n      },\n      revalidate: 1,\n    };\n  } catch (er) {\n    console.log(er.message);\n  }\n}\n\nexport default Home;\n"]},"metadata":{},"sourceType":"module"}