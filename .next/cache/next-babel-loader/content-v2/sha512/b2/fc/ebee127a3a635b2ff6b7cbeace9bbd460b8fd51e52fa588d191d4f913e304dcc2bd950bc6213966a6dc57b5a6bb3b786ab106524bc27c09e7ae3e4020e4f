{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/aflah/Documents/React Trials/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetailsPage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetails, {\n    title: props.title,\n    image: props.image,\n    description: props.description,\n    address: props.address\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this);\n}\n\nasync function getMeetups(id = null) {\n  try {\n    const client = await MongoClient.connect(\"mongodb://localhost:27017/meetup\");\n    const db = client.db();\n    const meetupColl = db.collection(\"meetups\");\n    let result;\n\n    if (!id) {\n      result = await meetupColl.find().toArray();\n    } else {\n      result = await meetupColl.findOne({\n        _id: ObjectId(id)\n      });\n    }\n\n    const serializedResult = result.map(meet => {\n      return {\n        id: meet._id.toString(),\n        title: meet.title,\n        image: meet.image,\n        description: meet.description,\n        address: meet.address\n      };\n    });\n    client.close();\n    return serializedResult;\n  } catch (er) {\n    console.log(er.message);\n  }\n}\n\nexport async function getStaticPaths() {\n  const meetups = await getMeetups();\n  return {\n    paths: meetups.map(meet => {\n      return {\n        params: {\n          meetupId: meet.id\n        }\n      };\n    }),\n    fallback: false\n  };\n}\nexport async function getStaticProps(context) {\n  // Fetch data from the server or API\n  try {\n    const meetupId = context.params.meetupId;\n    console.log(\"ðŸš€ ~ file: index.js:66 ~ getStaticProps ~ meetupId\", meetupId);\n    const meetupsData = await getMeetups(meetupId);\n    console.log(\"ðŸš€ ~ file: index.js:68 ~ getStaticProps ~ meetupsData\", meetupsData);\n    return {\n      props: {\n        meetupsData: meetupsData[0]\n      }\n    };\n  } catch (err) {\n    console.log(err.message);\n  }\n}\nexport default MeetupDetailsPage;","map":{"version":3,"sources":["/home/aflah/Documents/React Trials/06-onwards-to-a-bigger-project-starting-project/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetails","MeetupDetailsPage","props","title","image","description","address","getMeetups","id","client","connect","db","meetupColl","collection","result","find","toArray","findOne","_id","serializedResult","map","meet","toString","close","er","console","log","message","getStaticPaths","meetups","paths","params","meetupId","fallback","getStaticProps","context","meetupsData","err"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,aAAP,MAA0B,wCAA1B;;AAEA,SAASC,iBAAT,CAA2BC,KAA3B,EAAkC;AAChC,sBACE,QAAC,aAAD;AACE,IAAA,KAAK,EAAEA,KAAK,CAACC,KADf;AAEE,IAAA,KAAK,EAAED,KAAK,CAACE,KAFf;AAGE,IAAA,WAAW,EAAEF,KAAK,CAACG,WAHrB;AAIE,IAAA,OAAO,EAAEH,KAAK,CAACI;AAJjB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;AAED,eAAeC,UAAf,CAA0BC,EAAE,GAAG,IAA/B,EAAqC;AACnC,MAAI;AACF,UAAMC,MAAM,GAAG,MAAMX,WAAW,CAACY,OAAZ,CACnB,kCADmB,CAArB;AAGA,UAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,UAAMC,UAAU,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAAnB;AACA,QAAIC,MAAJ;;AACA,QAAI,CAACN,EAAL,EAAS;AACPM,MAAAA,MAAM,GAAG,MAAMF,UAAU,CAACG,IAAX,GAAkBC,OAAlB,EAAf;AACD,KAFD,MAEO;AACLF,MAAAA,MAAM,GAAG,MAAMF,UAAU,CAACK,OAAX,CAAmB;AAAEC,QAAAA,GAAG,EAAEnB,QAAQ,CAACS,EAAD;AAAf,OAAnB,CAAf;AACD;;AACD,UAAMW,gBAAgB,GAAGL,MAAM,CAACM,GAAP,CAAYC,IAAD,IAAU;AAC5C,aAAO;AACLb,QAAAA,EAAE,EAAEa,IAAI,CAACH,GAAL,CAASI,QAAT,EADC;AAELnB,QAAAA,KAAK,EAAEkB,IAAI,CAAClB,KAFP;AAGLC,QAAAA,KAAK,EAAEiB,IAAI,CAACjB,KAHP;AAILC,QAAAA,WAAW,EAAEgB,IAAI,CAAChB,WAJb;AAKLC,QAAAA,OAAO,EAAEe,IAAI,CAACf;AALT,OAAP;AAOD,KARwB,CAAzB;AASAG,IAAAA,MAAM,CAACc,KAAP;AACA,WAAOJ,gBAAP;AACD,GAvBD,CAuBE,OAAOK,EAAP,EAAW;AACXC,IAAAA,OAAO,CAACC,GAAR,CAAYF,EAAE,CAACG,OAAf;AACD;AACF;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACrC,QAAMC,OAAO,GAAG,MAAMtB,UAAU,EAAhC;AACA,SAAO;AACLuB,IAAAA,KAAK,EAAED,OAAO,CAACT,GAAR,CAAaC,IAAD,IAAU;AAC3B,aAAO;AACLU,QAAAA,MAAM,EAAE;AACNC,UAAAA,QAAQ,EAAEX,IAAI,CAACb;AADT;AADH,OAAP;AAKD,KANM,CADF;AAQLyB,IAAAA,QAAQ,EAAE;AARL,GAAP;AAUD;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC5C;AACA,MAAI;AACF,UAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,oDAAZ,EAAkEM,QAAlE;AACA,UAAMI,WAAW,GAAG,MAAM7B,UAAU,CAACyB,QAAD,CAApC;AACAP,IAAAA,OAAO,CAACC,GAAR,CACE,uDADF,EAEEU,WAFF;AAKA,WAAO;AACLlC,MAAAA,KAAK,EAAE;AACLkC,QAAAA,WAAW,EAAEA,WAAW,CAAC,CAAD;AADnB;AADF,KAAP;AAKD,GAdD,CAcE,OAAOC,GAAP,EAAY;AACZZ,IAAAA,OAAO,CAACC,GAAR,CAAYW,GAAG,CAACV,OAAhB;AACD;AACF;AAED,eAAe1B,iBAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\n\nimport MeetupDetails from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetailsPage(props) {\n  return (\n    <MeetupDetails\n      title={props.title}\n      image={props.image}\n      description={props.description}\n      address={props.address}\n    />\n  );\n}\n\nasync function getMeetups(id = null) {\n  try {\n    const client = await MongoClient.connect(\n      \"mongodb://localhost:27017/meetup\"\n    );\n    const db = client.db();\n    const meetupColl = db.collection(\"meetups\");\n    let result;\n    if (!id) {\n      result = await meetupColl.find().toArray();\n    } else {\n      result = await meetupColl.findOne({ _id: ObjectId(id) });\n    }\n    const serializedResult = result.map((meet) => {\n      return {\n        id: meet._id.toString(),\n        title: meet.title,\n        image: meet.image,\n        description: meet.description,\n        address: meet.address,\n      };\n    });\n    client.close();\n    return serializedResult;\n  } catch (er) {\n    console.log(er.message);\n  }\n}\n\nexport async function getStaticPaths() {\n  const meetups = await getMeetups();\n  return {\n    paths: meetups.map((meet) => {\n      return {\n        params: {\n          meetupId: meet.id,\n        },\n      };\n    }),\n    fallback: false,\n  };\n}\n\nexport async function getStaticProps(context) {\n  // Fetch data from the server or API\n  try {\n    const meetupId = context.params.meetupId;\n    console.log(\"ðŸš€ ~ file: index.js:66 ~ getStaticProps ~ meetupId\", meetupId);\n    const meetupsData = await getMeetups(meetupId);\n    console.log(\n      \"ðŸš€ ~ file: index.js:68 ~ getStaticProps ~ meetupsData\",\n      meetupsData\n    );\n\n    return {\n      props: {\n        meetupsData: meetupsData[0],\n      },\n    };\n  } catch (err) {\n    console.log(err.message);\n  }\n}\n\nexport default MeetupDetailsPage;\n"]},"metadata":{},"sourceType":"module"}